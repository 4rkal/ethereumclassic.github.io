ethCompatibility: Compatibilidad con ETH
ethCompatibilityDate: Q1 2019
ethCompatibilityText: El EVM y el SputnikVM se actualizarán para admitir el hard fork de Byz + Const.
embeddedSvm: SVM incorporado
embeddedSvmDate: Q1 2019
embeddedSvmText: Embedded SVM permitirá EVM y SputnikVM para aplicaciones integradas.
documentationWebsite: Sitio web de documentación
documentationWebsiteDate: Q1 2019
documentationWebsiteText: Se proporcionará un nuevo sitio web de documentación para ayudar a los
  desarrolladores nuevos y existentes. Se explorará la documentación incorporada
  en las herramientas ETC.
classicGeth: Geth clásico
classicGethDate: Q1-Q2 2019
classicGethText: Soporte y mantenimiento para Classic Geth.
jsonRpcSchema: Esquema JSON RPC
jsonRpcSchemaDate: Q1-Q2 2019
jsonRpcSchemaText: Cree ECIP para la generación automática de esquemas JSON de Classic-Geth y
  Multi-Geth. Esto reducirá los costos operativos relacionados con las
  bibliotecas. Esta mejora haría que el entorno de desarrollo de DApp sea más
  eficiente al eliminar la necesidad de API RPC como Web3 o Emerald JS.
serviceRunner: Service Runner
serviceRunnerDate: Q1-Q2 2019
serviceRunnerText: Una API de Service Runner ayudaría a facilitar la gestión de las dependencias
  e integraciones del marco DApp.
dappDeploymentTool: Herramienta de implementación de DApp
dappDeploymentToolDate: Q2 2019
dappDeploymentToolText: Una aplicación GUI fácil de usar para que los desarrolladores implementen sus
  DApps.
uxUiResearch: Investigación UX/UI
uxUiResearchDate: Q2 2019
uxUiResearchText: Se realizarán investigaciones para investigar el entorno de desarrollo de DApp.
multiNetworkExplorer: Explorador de redes múltiples
multiNetworkExplorerDate: Q2-Q3 2019
multiNetworkExplorerText: Un explorador de bloques fácil de usar para el desarrollo de DApp que se puede
  usar con cualquier red basada en Ethereum.
etcJitCompiler: Compilador ETC JIT
etcJitCompilerDate: Q1-Q3 2019
etcJitCompilerText: El compilador ETC JIT traducirá el código de bytes EVM al código de máquina
  nativo. El compilador JIT generalmente reduce el tiempo de ejecución del
  programa en un factor de 3–4x.
atlantisHardFork: Horquilla dura Atlantis
atlantisHardForkDate: Q3 2019
atlantisHardForkText: Habilite las excelentes actualizaciones de protocolo de red de Ethereum
  Foundation Spurious Dragon y Byzantium en la red Ethereum Classic
smartContractIde: IDE de contrato inteligente
smartContractIdeDate: Q3-Q4 2019
smartContractIdeText: Un IDE de contrato inteligente fácil de usar y un entorno de tiempo de
  ejecución.
multiGeth: Multi-Geth
multiGethDate: Q4 2019
multiGethText: Soporte y mantenimiento continuo para Multi-Geth.
evmLlvmBackend: EVM LLVM Backend
evmLlvmBackendDate: Q2-Q4 2019
evmLlvmBackendText: Con un objetivo de back-end EVM para LLVM, los desarrolladores pueden usar una
  gran variedad de lenguajes de programación distintos de Solidity para apuntar
  a la máquina virtual Ethereum. Un objetivo de back-end EVM abre oportunidades
  para la depuración a nivel fuente y expone el interés EVM a la comunidad LLVM.
devTutorialsAndGuides: Dev Tutoriales y Guías
devTutorialsAndGuidesDate: Q1 — Q4 2019
devTutorialsAndGuidesText: Soporte continuo para desarrolladores nuevos y existentes con tutoriales y
  guías.
aghartaHardFork: Horquilla dura Agharta
aghartaHardForkDate: Q1 2020
aghartaHardForkText: Habilite las sobresalientes actualizaciones del protocolo de red Constaninople
  Foundation y de Petersburgo en la red Ethereum Classic.
aztlNHardFork: Horquilla dura de Aztlán
aztlNHardForkDate: TBD 2020
aztlNHardForkText: Habilite las excelentes actualizaciones del protocolo de red Ethereum
  Foundation Istanbul en la red Ethereum Classic.
