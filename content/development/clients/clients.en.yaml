type: info
buttons: 
  -
    key: guide
    name: Guide
    icon: book
  -
    key: release
    name: Releases
    icon: code
  -
    key: support
    name: Support
    iconRef: supportIcon
items:
  -
    key: Core-Geth
    name: Core-Geth
    link: https://core-geth.org/
    description: Core-Geth is a distribution of go-ethereum with many flavors. For Thanos upgrade support, please use version v1.11.18 or later. Upgrade considerations, users can use their existing data directories and do not need to resync for migration to Core-Geth from the deprecated Multi-Geth client. This client is Long Term Supported by the ETC Core development team with stable funding from Ethereum Classic Labs. This is a recommended client from a well-known transparent team.
    guide: https://core-geth.org/install
    release: https://github.com/etclabscore/core-geth/releases
    support: https://gitter.im/core-geth/community
    supportIcon: fab fa-gitter
  -
    key: Hyperledger Besu
    name: Hyperledger Besu
    link: https://besu.hyperledger.org/
    description: Hyperledger Besu is an Ethereum client designed to be enterprise-friendly for both public and private permissioned network use cases. For Thanos upgrade support, please use version 20.10.0 or later. Upgrade considerations, APIs between ParityEthereum and Besu significantly differ and mining is not very well supported in Besu at this moment. This client is Long Term Supported by the ChainSafe and ETC Cooperative teams as part of the Hyperledger project with stable funding from Grayscale's Ethereum Classic Trust. This is a recommended client from a well-known transparent team.
    guide: https://besu.hyperledger.org/en/stable/HowTo/Get-Started/Install-Binaries/
    release: https://github.com/hyperledger/besu/releases
    support: https://chat.hyperledger.org/
    supportIcon: fab fa-rocketchat
  -
    key: Mantis
    name: Mantis
    link: https://mantisclient.io/
    description: Mantis will be a fully featured client and wallet UI, developed from the ground up and written in Scala for the Ethereum Classic network (ETC). Created by IOHK to add robustness and variety to the ETC's client share, it includes optimizations and network upgrades that improve network security, sustainability, and performance in the long term. Mantis should be considered as Beta software and is not compatible with mainnet or any testnet besides Sagano. Also, isn't updated with the Magneto version at the moment.
    guide: https://docs.mantisclient.io/install/install-client
    release: https://github.com/input-output-hk/mantis/releases
    support: https://docs.mantisclient.io/resources/faq
    supportIcon: fab fa-github
